[Understanding Data Types]
1. 
- if it has characters like () or -, I would use string, otherwise use int
- double
- int
- string or int (0 for M, 1 for F, 2 for not to answer)
- float
- int
- float
- double
- long
- long
- int


2. 
value types vs. reference types
- Value types directly contain their data while reference type stores references to their data
- each value type has its own copy of data while two reference can refernce the same object
- operation on one value type can not affect another while on one reference type can affect another.

boxing vs. unboxing
boxing converts a value type to a reference type
unboxing converts a reference type to a value type

3. managed resources are those that are pure .NET code and managed by the runtime and are under its direct control. They can be freed up by the garbage collector.
   unmanaged resources are resources not directly under the control of the garbage collector.

4. .NET garbage collector manages the allocation and release of memory for an application. It can eliminate common problems, such as forgetting to free an object and causing memory leak or attemping to access memory for an object that's already been freed.



[Controlling Flow and Converting Types]
1. it will throw exception 'System.DivideByZeroException', which is a class that handles errors generated from dividing by 0.


2. same as question 1

3. it will wrap the variable. for example if we set an integer to 2147483648, the integer becomes -2147483648.

4. y++ first return the value of y, (so x = y) then increment y;
   ++y first increment y, then return the value of y (so x = y+1).

5. the break statement terminates the loop and transfers execution to the statement immediatly following the loop;
   the continue statement cause the loop to skip the remainder of its body and immediately retest its condition prior to reiterating;
   the return satement terminates the execution of the method in which it appears and returns control to the calling method.

6. 
- code that declares and initializes the loop variable.
- the loop's true/false condition.
- an expression that changes the loop variable after each loop cycle.
they are all required.

7. "=" is an assignment operator that used to assign value to the variable
   "==" is an operator that checks whether the two given operands ate equal or not.

8. yes, but it's an endless loop.

9. it replaces the default keyword to signify that it should match anything if reached.

10. the IEnumerable interface


[arrays and strings]

1. use string if the strig is going to remain constant throughout the program since string is immutable;
   use stringBuilder if the string needs to be flexiable, for example operations in the construction of the string

2. the Array class is the base class for all arrays in C#.

3. we can use Array.Sort() method, and take the array to be sorted as parameter.

4. Array.Length

5. No, we can only store similar datatype in an array.

6. they both perform a shallow copy.
   Clone() returns a new array object containing all the elements in the original array;
   CopyTo() copes the elements into another existing array.